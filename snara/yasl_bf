#!yasl

// [[#], i_str, str, ptr, ...arr[]]
! !
[#]
0 2 !^
0 4 !^
256 #(0 # !^)

{ 256 + 256 % } to_byte
{
  "\0        \t\n\v\f\r                   !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ "
  2 ^ ]#[
} i_to_c
{ "A" - 65 + } c_to_i

{ 4 ^ } get_ptr
{ 4 !^} set_ptr
{ get_ptr  4 + %^  2 ^ } get_arr
{ 2 !^ %!^ 4 - set_ptr} set_arr

// [0:str[i], 1:i, 2:str, 3:depth, ...]
{ 
	1 set_ptr 1
	@( ! 1 + %]#[ 
	= "[" == ? (get_ptr (1 +) set_ptr)
	= "]" == ? (get_ptr (1 -) set_ptr)
	get_ptr %? (set_ptr 1) : (set_ptr 0)
	)
	get_ptr !
	! ""
} jump_forward
{ 
	-1 set_ptr 1
	@( ! 1 - %]#[ 
	= "[" == ? (get_ptr (1 +) set_ptr)
	= "]" == ? (get_ptr (1 -) set_ptr)
	get_ptr %? (set_ptr 1) : (set_ptr 0)
	)
	get_ptr !
	! ""
} jump_backward

// [0:str[i], 1:i, 2:str, 3:ptr, 4...:arr[]]
@ (
  %]#[
  = ">" == ? (get_ptr (1 + to_byte) set_ptr) 
  = "<" == ? (get_ptr (1 - to_byte) set_ptr) 
  = "+" == ? (get_arr (1 + to_byte) set_arr) 
  = "-" == ? (get_arr (1 - to_byte) set_arr) 
  = "." == ? (get_arr (= i_to_c print) set_arr) 
  = "," == ? (get_arr (! read ! 0 ]#[ c_to_i) set_arr) 
  = "[" == ? (get_arr %? set_arr : (set_arr jump_forward))
  = "]" == ? (get_arr %? (set_arr jump_backward) : set_arr) 

  ( ! 1 + ) (= 3 ^ [#] 2 ^ 4 !^ <)
) // while (++i < len(str))
